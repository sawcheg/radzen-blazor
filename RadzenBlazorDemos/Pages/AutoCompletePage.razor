@page "/autocomplete"
@using RadzenBlazorDemos.Data
@using RadzenBlazorDemos.Models.Northwind

@inherits DbContextPage

<RadzenExample Name="AutoComplete">
<div class="container-fluid">
    <div class="row">
        <div class="col-md-4 p-3">
            <RadzenCard>
                <RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.H3" class="mb-0">AutoComplete</RadzenText>
                <RadzenText TextStyle="TextStyle.Body2" class="mb-2">Start typing e.g. France</RadzenText>
                <RadzenAutoComplete Data=@customers TextProperty="CompanyName" Change=@(args => OnChange(args, "AutoComplete")) Style="width: 100%;" />
            </RadzenCard>
        </div>
        <div class="col-md-4 p-3">
            <RadzenCard>
                <RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.H3" class="mb-0">AutoComplete with placeholder</RadzenText>
                <RadzenText TextStyle="TextStyle.Body2" class="mb-2">Start typing e.g. France</RadzenText>
                <RadzenAutoComplete Placeholder="Select a customer..." Data=@customers TextProperty="CompanyName" Change=@(args => OnChange(args, "AutoComplete with placeholder")) Style="width: 100%;" />
            </RadzenCard>
        </div>
        <div class="col-md-4 p-3">
            <RadzenCard>
                <RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.H3" class="mb-0">Custom filter operator</RadzenText>
                <RadzenText TextStyle="TextStyle.Body2" class="mb-2">Show items that <b>start with</b> a specific string</RadzenText>
                <RadzenAutoComplete Data=@customers TextProperty="CompanyName" FilterOperator="StringFilterOperator.StartsWith" Change=@(args => OnChange(args, "AutoComplete with custom filter operator")) Style="width: 100%;" />
            </RadzenCard>
        </div>
        <div class="col-md-4 p-3">
            <RadzenCard>
                <RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.H3" class="mb-0">Custom filtering</RadzenText>
                <RadzenText TextStyle="TextStyle.Body2" class="mb-2">Filtering with LoadData</RadzenText>
                <RadzenAutoComplete Data=@customCustomersData TextProperty="CompanyName" LoadData=@OnLoadData Change=@(args => OnChange(args, "AutoComplete with custom filtering")) Style="width: 100%;" />
            </RadzenCard>
        </div>
        <div class="col-md-4 p-3">
            <RadzenCard>
                <RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.H3" class="mb-0">Disabled AutoComplete</RadzenText>
                <RadzenText TextStyle="TextStyle.Body2" class="mb-2">AutoComplete with Disabled="true"</RadzenText>
                <RadzenAutoComplete Disabled="true" Placeholder="Select a customer..."  Data=@customers TextProperty="CompanyName" Change=@(args => OnChange(args, "Disabled AutoComplete")) Style="width: 100%;" />
            </RadzenCard>
        </div>
        <div class="col-md-4 p-3">
            <RadzenCard>
                <RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.H3" class="mb-0">AutoComplete with Template</RadzenText>
                <RadzenText TextStyle="TextStyle.Body2" class="mb-2">Start typing e.g. `a`</RadzenText>
                <RadzenAutoComplete Placeholder="Select a customer..." Data=@customers TextProperty="CompanyName" Change=@(args => OnChange(args, "AutoComplete with Template")) Style="width: 100%;">
                    <Template>
                        CompanyName: @context.CompanyName
                        <br />
                        Country: @context.Country
                    </Template>
                </RadzenAutoComplete>
            </RadzenCard>
        </div>
        <div class="col-md-4 p-3">
            <RadzenCard>
                <RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.H3" class="mb-0">AutoComplete with a List of Strings</RadzenText>
                <RadzenText TextStyle="TextStyle.Body2" class="mb-2">Start typing e.g. France</RadzenText>
                <RadzenAutoComplete Data=@customersNames FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" Change=@(args => OnChange(args, "AutoComplete with a List of Strings")) Style="width: 100%;" />
            </RadzenCard>
        </div>
        <div class="col-md-4 p-3">
            <RadzenCard>
                <RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.H3" class="mb-0">Multiline AutoComplete</RadzenText>
                <RadzenText TextStyle="TextStyle.Body2" class="mb-2">AutoComplete with Multiline="true"</RadzenText>
                <RadzenAutoComplete Multiline="true" Placeholder="Select a customer..." Data=@customers TextProperty="CompanyName" Change=@(args => OnChange(args, "Multiline AutoComplete")) Style="width: 100%;" />
            </RadzenCard>
        </div>
    </div>
</div>
</RadzenExample>

<EventConsole @ref=@console Class="mt-4" />

@code {
    EventConsole console;

    IEnumerable<Customer> customers;
    IEnumerable<Customer> customCustomersData;
    IEnumerable<string> customersNames;

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        customers = dbContext.Customers.ToList();
        customersNames = customers.Select(o => o.CompanyName).ToList();
    }

    void OnChange(object value, string name)
    {
        console.Log($"{name} value changed to {value}");
    }

    void OnLoadData(LoadDataArgs args)
    {
        console.Log($"LoadData with filter: {args.Filter}");

        customCustomersData = dbContext.Customers.Where(c => c.CustomerID.Contains(args.Filter) || c.ContactName.Contains(args.Filter)).ToList();

        InvokeAsync(StateHasChanged);
    }
}