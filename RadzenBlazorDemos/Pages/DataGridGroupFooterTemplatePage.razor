@page "/datagrid-group-footer-template"

@using RadzenBlazorDemos.Data
@using RadzenBlazorDemos.Models.Northwind
@using Microsoft.EntityFrameworkCore

@inherits DbContextPage

<RadzenText TextStyle="TextStyle.H3" TagName="TagName.H1" Class="my-4">
    DataGrid <strong>Group Footer Totals</strong>
</RadzenText>
<RadzenText TextStyle="TextStyle.Body1" Class="my-4">
    The <strong>GroupFooterTemplate</strong> column property allows you to display aggregated data in the column footer for each group.
</RadzenText>

<RadzenExample Name="DataGrid" Source="DataGridGroupFooterTemplate" Heading="false">
    <RadzenDataGrid @ref="ordersGrid"  AllowGrouping="false" AllowFiltering="true" AllowPaging="true" AllowSorting="true" 
            Data="@orders" TItem="Order" Render="@OnRender">
        <GroupHeaderTemplate>
            @context.GroupDescriptor.GetTitle(): @(context.Data.Key ?? ""), Group items count: @context.Data.Count, Last order date: @(context.Data.Items.Cast<Order>().OrderByDescending(o => o.OrderDate).FirstOrDefault()?.OrderDate)
        </GroupHeaderTemplate>
        <Columns>
            <RadzenDataGridColumn Width="50px" TItem="Order" Title="#" Filterable="false" Sortable="false" TextAlign="TextAlign.Center">
                <Template>
                    @(orders.IndexOf(context) + 1)
                </Template>
            </RadzenDataGridColumn>
            <RadzenDataGridColumn Width="200px" TItem="Order" Property="OrderID" Title="Order ID">
                <FooterTemplate>
                    Displayed orders: <b>@ordersGrid.View.Count()</b> of <b>@orders.Count()</b>
                </FooterTemplate>
            </RadzenDataGridColumn>
            <RadzenDataGridColumn Width="200px" TItem="Order" Property="Customer.CompanyName" Title="Customer" />
            <RadzenDataGridColumn TItem="Order" Property="Employee.LastName" Title="Employee">
                <Template Context="order">
                    @order.Employee?.FirstName @order.Employee?.LastName
                </Template>
            </RadzenDataGridColumn>
            <RadzenDataGridColumn TItem="Order" Property="OrderDate" Title="Order Date" FormatString="{0:d}">
                <FooterTemplate>
                    Last order date: <b>@String.Format("{0:d}", orders.OrderByDescending(o => o.OrderDate).LastOrDefault()?.OrderDate)</b>
                </FooterTemplate>
            </RadzenDataGridColumn>
            <RadzenDataGridColumn TItem="Order" Property="Freight" Title="Freight">
                <Template Context="order">
                    @String.Format(new System.Globalization.CultureInfo("en-US"), "{0:C}", order.Freight)
                </Template>
                <FooterTemplate>
                    Total amount: <b>@String.Format(new System.Globalization.CultureInfo("en-US"), "{0:C}", orders.Sum(o => o.Freight))</b>
                </FooterTemplate>
                <GroupFooterTemplate>
                    Group amount: <b>@String.Format(new System.Globalization.CultureInfo("en-US"), "{0:C}", context.Data.Items.Cast<Order>().Sum(o => o.Freight))</b>
                </GroupFooterTemplate>
            </RadzenDataGridColumn>
            <RadzenDataGridColumn TItem="Order" Property="ShipName" Title="Ship Name" />
        </Columns>
    </RadzenDataGrid>
</RadzenExample>
@code {
    IList<Order> orders;
    RadzenDataGrid<Order> ordersGrid;

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        orders = dbContext.Orders.Include("Customer").Include("Employee").ToList();
    }

    void OnRender(DataGridRenderEventArgs<Order> args)
    {
        if(args.FirstRender)
        {
            args.Grid.Groups.Add(new GroupDescriptor(){ Property = "Employee.LastName", Title = "Employee" });
            StateHasChanged();
        }
    }
}