@page "/pager"

@using RadzenBlazorDemos.Data
@using RadzenBlazorDemos.Models.Northwind
@using Microsoft.EntityFrameworkCore

@inherits DbContextPage

<RadzenExample Name="Pager">
    <RadzenDataList WrapItems="true" AllowPaging="false" Data="@orders" TItem="Order">
        <Template Context="order">
            <RadzenCard Style="width:300px;">
                <div class="d-flex flex-row align-items-center">
                    <RadzenImage Path="@order.Employee?.Photo" Class="rounded-circle float-start me-3" Style="width: 80px; height: 80px;" />
                    <div>
                        <h4 class="mb-0">@(order.Employee?.FirstName + " " + order.Employee?.LastName)</h4>
                        <div>@order.Customer?.CompanyName</div>
                        <div style="font-size: .8em">@(order.ShipCity), @(order.ShipCountry)</div>
                    </div>
                </div>
                <hr style="border: none; background-color: rgba(0,0,0,.08); height: 1px; margin: 1rem 0;" />
                <div class="row">
                    <div class="col-md-8 text-truncate">
                        <b>@(order.ShipName)</b>
                    </div>
                    <div class="col-md-4 text-end">
                        <RadzenBadge BadgeStyle="BadgeStyle.Secondary" Text=@($"{String.Format(new System.Globalization.CultureInfo("en-US"), "{0:C}", order.Freight)}") />
                    </div>
                </div>
            </RadzenCard>
        </Template>
    </RadzenDataList>
    <RadzenPager ShowPagingSummary="true" PagingSummaryFormat="@pagingSummaryFormat" HorizontalAlign="HorizontalAlign.Right" Count="count" PageSize="@pageSize" PageNumbersCount="5" PageChanged="@PageChanged" />
</RadzenExample>
@code {
    string pagingSummaryFormat = "Displaying page {0} of {1} (total {2} records)";
    int pageSize = 6;
    int count;
    IEnumerable<Order> orders;

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        count = dbContext.Orders.Count();
        orders = GetOrders(0, pageSize);
    }

    void PageChanged(PagerEventArgs args)
    {
        orders = GetOrders(args.Skip, args.Top);
    }

    IEnumerable<Order> GetOrders(int skip, int take)
    {
        return dbContext.Orders.Include("Customer").Include("Employee").Skip(skip).Take(take).ToList();
    }
}