@page "/dialogcard/{OrderID}"

@using RadzenBlazorDemos.Data
@using RadzenBlazorDemos.Models.Northwind
@using Microsoft.EntityFrameworkCore

@inherits DbContextPage
@inject Radzen.DialogService dialogService


<div class="row">
    <div class="col-lg-6 d-flex">
        <RadzenCard Style="width: 100%; overflow: hidden; border: var(--rz-grid-cell-border)" Class="rz-shadow-0">
            <RadzenText TextStyle="TextStyle.Subtitle1">Contact</RadzenText>
            <div class="d-flex flex-row">
                <RadzenImage Path="@order.Employee?.Photo" Class="rounded-circle float-start mt-1 me-3" Style="width: 90px; height: 90px;" />
                <div>
                    <RadzenText TextStyle="TextStyle.Overline" Class="d-flex mt-3 mb-0" Style="color: var(--rz-text-tertiary-color);">Employee</RadzenText>
                    <RadzenText TextStyle="TextStyle.Body2"><b>@(order.Employee?.FirstName + " " + order.Employee?.LastName)</b></RadzenText>
                    <RadzenText TextStyle="TextStyle.Overline" Class="d-flex mt-3 mb-0" Style="color: var(--rz-text-tertiary-color);">Company</RadzenText>
                    <RadzenText TextStyle="TextStyle.Body2"><b>@order.Customer?.CompanyName</b></RadzenText>
                </div>
            </div>
        </RadzenCard>
    </div>
    <div class="col-lg-6 d-flex">
        <RadzenCard Style="width: 100%; overflow: hidden; border: var(--rz-grid-cell-border)" Class="rz-shadow-0">
            <RadzenText TextStyle="TextStyle.Subtitle1">Delivery Information</RadzenText>
            <div class="row">
                <div class="col">
                    <RadzenText TextStyle="TextStyle.Overline" Class="d-flex mt-3 mb-0" Style="color: var(--rz-text-tertiary-color);">Address</RadzenText>
                    <RadzenText TextStyle="TextStyle.Body2"><b>@(order.ShipAddress), @(order.ShipCity), @(order.ShipCountry)</b></RadzenText>
                    <RadzenText TextStyle="TextStyle.Overline" Class="d-flex mt-3 mb-0" Style="color: var(--rz-text-tertiary-color);">Ship name</RadzenText>
                    <RadzenText TextStyle="TextStyle.Body2"><b>@(order.ShipName)</b></RadzenText>
                </div>
            </div>
        </RadzenCard>
    </div>
</div>
<div class="row my-4">
    <div class="col-md-12">
        <RadzenText TextStyle="TextStyle.Subtitle1">
            Order @OrderID Details
            <RadzenBadge BadgeStyle="BadgeStyle.Secondary" Text=@($"{String.Format(new System.Globalization.CultureInfo("en-US"), "{0:C}", order.Freight)}") Class="float-end"/>
        </RadzenText>
        <RadzenDataGrid AllowFiltering="true" AllowPaging="true" AllowSorting="true" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive"
                    Data="@(orderDetails.Where(o => o.OrderID == OrderID))" TItem="OrderDetail" ColumnWidth="200px" Class="mt-3" Density="Density.Compact" AllowAlternatingRows="false">
            <Columns>
                <RadzenDataGridColumn TItem="OrderDetail" Property="Quantity" Title="Quantity" />
                <RadzenDataGridColumn TItem="OrderDetail" Property="Order.OrderDate" Title="Order Date" />
                <RadzenDataGridColumn TItem="OrderDetail" Property="Discount" Title="Discount" FormatString="{0:P}" />
            </Columns>
        </RadzenDataGrid>
    </div>
</div>
<div class="row">
    <div class="col-md-12 text-end">
        <RadzenButton Click="@((args) => dialogService.Close(false))" Variant="Variant.Flat" ButtonStyle="ButtonStyle.Light" Text="Cancel" Style="width: 120px" Class="me-1" />
        <RadzenButton Click="@((args) => dialogService.Close(true))" Variant="Variant.Flat" Text="OK" Style="width: 120px" />
    </div>
</div>

@code {
    [Parameter] public int OrderID { get; set; }

    Order order;
    IEnumerable<OrderDetail> orderDetails;

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        order = dbContext.Orders.Where(o => o.OrderID == OrderID)
                          .Include("Customer")
                          .Include("Employee").FirstOrDefault();

        orderDetails = dbContext.OrderDetails.Include("Order").ToList();
    }
}
